{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "d638bbf5-0e95-416e-8e91-f48132bd4b78",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    OrderID    Category      City PaymentMethod    SaleDate       Price  \\\n",
      "0  ORD-7778   Furniture   Houston    Debit Card  2024-06-24  610.101338   \n",
      "1  ORD-6791   Furniture   Chicago           NaN  2024-05-02  714.329017   \n",
      "2  ORD-6138  Stationery  New York   Credit Card  2024-01-07  761.840755   \n",
      "3  ORD-8291   Furniture  New York   Credit Card  2024-06-27  564.990275   \n",
      "4  ORD-1314  Appliances   Houston   Credit Card  2024-02-09  771.496793   \n",
      "\n",
      "   Quantity  Discount   Revenue  \n",
      "0       1.0        20    488.08  \n",
      "1      30.0        48  11143.53  \n",
      "2      46.0        18  28736.63  \n",
      "3      37.0        18  17141.80  \n",
      "4      30.0        11  20598.96  \n",
      "          City     Revenue\n",
      "2  Los Angeles  1735146.79\n",
      "1      Houston  1583426.63\n",
      "4      Phoenix  1564476.88\n",
      "0      Chicago  1459850.70\n",
      "3     New York  1120128.43\n",
      "   Category     Revenue\n",
      "1  Clothing  1604157.72\n",
      "      OrderID     Category      City PaymentMethod    SaleDate  Price  \\\n",
      "16   ORD-8700    Furniture  New York          Cash  2024-04-22    NaN   \n",
      "55   ORD-8046  Electronics   Chicago           NaN  2024-01-17    NaN   \n",
      "59   ORD-8867  Electronics   Houston          Cash  2024-03-19    NaN   \n",
      "114  ORD-1524   Appliances   Phoenix           NaN  2024-03-27    NaN   \n",
      "118  ORD-2582     Clothing   Chicago           NaN  2024-02-02    NaN   \n",
      "\n",
      "     Quantity  Discount  Revenue  \n",
      "16       43.0         4      NaN  \n",
      "55       41.0        42      NaN  \n",
      "59        9.0         8      NaN  \n",
      "114       3.0         2      NaN  \n",
      "118      36.0        49      NaN  \n",
      "PaymentMethod\n",
      "Online Payment    205\n",
      "Name: count, dtype: int64\n",
      "City\n",
      "Chicago                   (Chicago, Cash)\n",
      "Houston         (Houston, Online Payment)\n",
      "Los Angeles           (Los Angeles, Cash)\n",
      "New York       (New York, Online Payment)\n",
      "Phoenix         (Phoenix, Online Payment)\n",
      "Name: count, dtype: object\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd \n",
    "\n",
    "#importing the data of csv file into dataframe\n",
    "df=pd.read_csv('Sales_Data_Challenges.csv')\n",
    "print(df.head())\n",
    "\n",
    "\n",
    "#1.total revenue generated by each city\n",
    "totalRevenue = df.groupby('City')['Revenue'].sum().reset_index()\n",
    "totalRevenue = totalRevenue.sort_values(by='Revenue', ascending=False)\n",
    "print(totalRevenue.head())\n",
    "\n",
    "\n",
    "#2.finding categroy with the maximum\n",
    "revenueCategory=df.groupby('Category')['Revenue'].sum().reset_index()\n",
    "max_revenue=revenueCategory['Revenue'].max();\n",
    "significantCategory= revenueCategory[revenueCategory['Revenue']==max_revenue]\n",
    "print(significantCategory)\n",
    "\n",
    "\n",
    "\n",
    "#3. Finding the rows with missing prices\n",
    "missingPrices=df[df['Price'].isna()]\n",
    "print(missingPrices.head())\n",
    "\n",
    "\n",
    "\n",
    "#4. Finding the most preferred Payment Method \n",
    "counts=df['PaymentMethod'].value_counts()\n",
    "maxCounts=counts[counts.max()==counts]\n",
    "print(maxCounts)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "#5. Finding \n",
    "paymentBias = df.groupby('City')['PaymentMethod'].value_counts()\n",
    "bias= paymentBias.groupby('City').idxmax()\n",
    "print(bias)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
